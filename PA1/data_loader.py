# -*- coding: utf-8 -*-
"""data_loader.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vVCQKYkXqVu7RszDOxbtCyVoLCrd6t7N
"""

# writefile data_loader.py
import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt
mnist = tf.keras.datasets.mnist
def load_mnist():
    (train_images, train_labels), (test_images, test_labels) = mnist.load_data()
    # Normalize and add channel
    train_images = np.expand_dims(train_images, axis=-1) / 255.0
    test_images = np.expand_dims(test_images, axis=-1) / 255.0
    # Convert labels to int64
    train_labels = np.int64(train_labels)
    test_labels = np.int64(test_labels)

    return (train_images, train_labels), (test_images, test_labels)

# Explore the data
(train_images, train_labels),(test_images,test_labels) = load_mnist()
print("Train image shape: ",train_images.shape)
print("Test image shape: ",test_images.shape)
plt.figure(figsize=(10,10))
random_inds = np.random.choice(60000,36)
for i in range(36):
    plt.subplot(6,6,i+1)
    plt.xticks([])
    plt.yticks([])
    plt.grid(False)
    image_ind = random_inds[i]
    plt.imshow(np.squeeze(train_images[image_ind]), cmap=plt.cm.binary)
    plt.xlabel(train_labels[image_ind])